/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.akovalchuk;

import java.util.Stack;

/**
 * 1249. Minimum Remove to Make Valid Parentheses
 */
public class ParenthesesMinRemoveI {

    public String minRemoveToMakeValid(String s) {
        if (s == null || s.isEmpty())
            return "";
        char[] chars = s.toCharArray();
        var stack = new Stack<Integer>();
        for (int i = 0; i < chars.length; i++) {
            if (chars[i] == '(') {
                stack.push(i);
            } else if (chars[i] == ')') {
                if (stack.empty()) {
                    chars[i] = 0;
                } else {
                    stack.pop();
                }
            }
        }
        while (!stack.empty()) {
            chars[stack.pop()] = 0;
        }
        var sb = new StringBuilder();
        for (int i = 0; i < chars.length; i++) {
            if (chars[i] != 0) {
                sb.append(chars[i]);
            }
        }
        return sb.toString();
    }

    public static void main(String[] args) {
        var solution = new ParenthesesMinRemoveI();
        System.out.println(solution.minRemoveToMakeValid("lee(t(c)o)de)"));
        System.out.println(solution.minRemoveToMakeValid("a)b(c)d"));
        System.out.println(solution.minRemoveToMakeValid("))(("));
        System.out.println(solution.minRemoveToMakeValid("(a(b(c)d)"));
    }
    
}
